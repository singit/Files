# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

#keys_zone=cache1:100m 表示这个zone名称为cache1，分配的内存大小为100MB
##/usr/local/nginx/proxy_cache_dir/cache1 表示cache1这个zone的文件要存放的目录
##levels=1:2 表示缓存目录的第一级目录是1个字符，第二级目录是2个字符，即/usr/local/nginx/proxy_cache_dir/cache1/a/1b这种形式
##inactive=1d 表示这个zone中的缓存文件如果在1天内都没有被访问，那么文件会被cache manager进程删除掉
##max_size=10g 表示这个zone的硬盘容量为10GB
#
uwsgi_temp_path   /mnt1/nginx_cache/tmp 1 2;
uwsgi_cache_path  /mnt1/nginx_cache/cache/cache1 levels=1:2 keys_zone=cache1:200m inactive=60m max_size=5g;
uwsgi_cache_path  /mnt1/nginx_cache/cache/cache2 levels=1:2 keys_zone=cache2:100m inactive=60m max_size=5g;
log_format format1 '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" CACHE{$upstream_cache_status} $request_time $upstream_response_time ';

server {
    #online
    listen 8101;
    listen 80;
    server_name geibali.com, xktai.com;

    access_log /mnt1/log/nginx_access.log format1;

    add_header X-Cache $upstream_cache_status;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_min_length 1k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json;

    location ~ /.well-known { allow all; }

    set $no_cache 0;
    if ($request_uri ~* "/(admin/)")
    {
        set $no_cache 1;
    }

    #if ($request_uri ~* "/(video[iI]{1}tem/[0-9]+/?$)")
    #{
    #    set $no_cache 1;
    #}

    if ($request_uri ~* "cache=1")
    {
        set $no_cache 1;
    }



    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        uwsgi_cache cache1;
        uwsgi_cache_key $host$uri$is_args$args;
        uwsgi_cache_methods GET HEAD;
        uwsgi_cache_valid any 1m;
        uwsgi_ignore_headers Set-Cookie; 
        expires 1h;

        root /home/work/deploy/online/es/cms;
    }

    location / {
        uwsgi_cache cache1;
        uwsgi_cache_key $host$uri$is_args$args;
        uwsgi_cache_methods GET HEAD;
        uwsgi_cache_valid 200 304 302 10m;
        uwsgi_cache_valid 301 10m;
        uwsgi_cache_valid any 1m;
        uwsgi_ignore_headers Set-Cookie; 
        expires 10m;
        include         uwsgi_params;
        uwsgi_pass      unix:/home/work/deploy/online/es/cms/mysite.sock;
    }
}


server {
    #pre_online
    listen 9101;
    server_name geibali.com, xktai.com;

    location ~ /.well-known { allow all; }

    access_log /var/log/nginx/access.log format1;

    add_header X-Cache $upstream_cache_status;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 4 16k;
    gzip_min_length 1k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json;


    location = /favicon.ico { access_log off; log_not_found off; }

    location /static/ {

        root /home/work/deploy/pre_online/es/cms;
    }

    set $no_cache 0;
    if ($request_uri ~* "/(admin/)")
    {
        set $no_cache 1;
    }

    if ($request_uri ~* "/(video[iI]{1}tem/[0-9]+/?$)")
    {
        set $no_cache 1;
    }

    if ($request_uri ~* "cache=1")
    {
        set $no_cache 1;
    }



    location / {
        #uwsgi_cache cache2;
        #uwsgi_cache_key $host$uri$is_args$args;
        #uwsgi_cache_methods GET HEAD;
        #uwsgi_cache_valid 200 304 302 5m;
        #uwsgi_cache_valid 301 1h;
        #uwsgi_cache_valid any 1m;
        #uwsgi_no_cache $no_cache;
        #uwsgi_ignore_headers Set-Cookie; 
        include         uwsgi_params;
        uwsgi_pass      unix:/home/work/deploy/pre_online/es/cms/mysite.sock;
    }
}


server {
	listen 8011;
	listen [::]:8011 ipv6only=on;

    rewrite_log on;

    try_files $uri $uri/ @rewrite;

    location @rewrite {
        #rewrite ^/(.*)$ /index.php?s=$1;
        rewrite ^/(.*)$ /index.php;
    }

    root /home/work/nginx/html;

	#location for work
    location / {
		index index.php index.html index.htm;
    }
    

	# Make site accessible from http://localhost/
	server_name geibali.com www.geibali.com;

	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	
		# With php5-cgi alone:
		# fastcgi_pass 127.0.0.1:9000;
		# With php5-fpm:
		fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
		include fastcgi_params;
	}

}


	#location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		# try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules
	#}

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
